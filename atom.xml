<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lliugh 的博客</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/lliugh/blog/"/>
  <updated>2019-10-21T03:46:25.726Z</updated>
  <id>https://gitee.com/lliugh/blog/</id>
  
  <author>
    <name>lliugh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cx_Oracle引入失败导致crontab无法工作</title>
    <link href="https://gitee.com/lliugh/blog/2019/10/21/cx_Oracle%E5%BC%95%E5%85%A5%E5%A4%B1%E8%B4%A5%E5%AF%BC%E8%87%B4crontab%E6%97%A0%E6%B3%95%E5%B7%A5%E4%BD%9C/"/>
    <id>https://gitee.com/lliugh/blog/2019/10/21/cx_Oracle引入失败导致crontab无法工作/</id>
    <published>2019-10-21T03:24:00.963Z</published>
    <updated>2019-10-21T03:46:25.726Z</updated>
    
    <content type="html"><![CDATA[<p>版权声明：本文为CSDN博主「水墨小龙虾」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>本文链接：<a href="https://blog.csdn.net/jianhong1990/article/details/22167373" target="_blank" rel="noopener">https://blog.csdn.net/jianhong1990/article/details/22167373</a></p><p>今天遇到一个问题：</p><pre><code>一个python脚本命令行运行时很正常，放到crontab中就无法工作，日志也没有记录，找了半天，终于发现问题所在。</code></pre><p>在脚本最上方，程序如下：<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/local/bin python</span></span><br><span class="line"># coding=utf8</span><br><span class="line"><span class="keyword">import</span> cx_Oracle</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure></p><p>注意，这里<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cx_Oracle</span><br></pre></td></tr></table></figure></p><p>cx_Oracle需要依赖oracle的ORACLE_HOME环境。我发现ORACLE_HOME定义在/etc/profile下，在这里修改的内容是对所有用户起作用的，但是对crontab是不起作用的。以下是各个文件的一个作用域：</p><ol><li>/etc/profile： 此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. 并从/etc/profile.d目录的配置文件中搜集shell的设置。</li><li>/etc/bashrc: 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取。</li><li>~/.bash_profile: 每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。</li><li>~/.bashrc: 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。</li><li>~/.bash_logout: 当每次退出系统(退出bash shell)时,执行该文件. 另外,/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承 /etc/profile中的变量,他们是”父子”关系。</li><li>~/.bash_profile 是交互式、login 方式进入 bash 运行的~/.bashrc 是交互式 non-login 方式进入 bash 运行的通常二者设置大致相同，所以通常前者会调用后者。</li></ol><p>解决办法：<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">30 </span><span class="number">7</span> * * *  . /etc/profile; /<span class="keyword">usr</span>/local/bin/python2.<span class="number">7</span> /<span class="keyword">data</span>/storeDataToOracleDB.py  &amp;</span><br></pre></td></tr></table></figure></p><p>这里加上了<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. /etc/profile<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>ok，问题解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;版权声明：本文为CSDN博主「水墨小龙虾」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。&lt;br&gt;本文链接：&lt;a href=&quot;https://blog.csdn.net/jianhong1990/article/details/2216
      
    
    </summary>
    
    
      <category term="工作" scheme="https://gitee.com/lliugh/blog/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>分布式系统</title>
    <link href="https://gitee.com/lliugh/blog/2019/03/02/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    <id>https://gitee.com/lliugh/blog/2019/03/02/分布式系统/</id>
    <published>2019-03-02T14:25:20.000Z</published>
    <updated>2019-03-02T14:42:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：大闲人柴毛毛</p><p>链接：<a href="https://www.zhihu.com/question/20004877/answer/282033178" target="_blank" rel="noopener">https://www.zhihu.com/question/20004877/answer/282033178</a></p><p>来源：知乎</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><p><img src="/blog/images/fb-1.jpg" alt="分布式系统"></p><h3 id="单机结构"><a href="#单机结构" class="headerlink" title="单机结构"></a>单机结构</h3><h4 id="我想大家最最最熟悉的就是单机结构，一个系统业务量很小的时候所有的代码都放在一个项目中就好了，然后这个项目部署在一台服务器上就好了。整个项目所有的服务都由这台服务器提供。这就是单机结构。"><a href="#我想大家最最最熟悉的就是单机结构，一个系统业务量很小的时候所有的代码都放在一个项目中就好了，然后这个项目部署在一台服务器上就好了。整个项目所有的服务都由这台服务器提供。这就是单机结构。" class="headerlink" title="我想大家最最最熟悉的就是单机结构，一个系统业务量很小的时候所有的代码都放在一个项目中就好了，然后这个项目部署在一台服务器上就好了。整个项目所有的服务都由这台服务器提供。这就是单机结构。"></a>我想大家最最最熟悉的就是单机结构，一个系统业务量很小的时候所有的代码都放在一个项目中就好了，然后这个项目部署在一台服务器上就好了。整个项目所有的服务都由这台服务器提供。这就是单机结构。</h4><h4 id="那么，单机结构有啥缺点呢？我想缺点是显而易见的，单机的处理能力毕竟是有限的，当你的业务增长到一定程度的时候，单机的硬件资源将无法满足你的业务需求。此时便出现了集群模式，往下接着看。"><a href="#那么，单机结构有啥缺点呢？我想缺点是显而易见的，单机的处理能力毕竟是有限的，当你的业务增长到一定程度的时候，单机的硬件资源将无法满足你的业务需求。此时便出现了集群模式，往下接着看。" class="headerlink" title="那么，单机结构有啥缺点呢？我想缺点是显而易见的，单机的处理能力毕竟是有限的，当你的业务增长到一定程度的时候，单机的硬件资源将无法满足你的业务需求。此时便出现了集群模式，往下接着看。"></a>那么，单机结构有啥缺点呢？我想缺点是显而易见的，单机的处理能力毕竟是有限的，当你的业务增长到一定程度的时候，单机的硬件资源将无法满足你的业务需求。此时便出现了集群模式，往下接着看。</h4><h3 id="集群结构"><a href="#集群结构" class="headerlink" title="集群结构"></a>集群结构</h3><h4 id="集群模式在程序猿界有各种装逼解释，有的让你根本无法理解，其实就是一个很简单的玩意儿，且听我一一道来。"><a href="#集群模式在程序猿界有各种装逼解释，有的让你根本无法理解，其实就是一个很简单的玩意儿，且听我一一道来。" class="headerlink" title="集群模式在程序猿界有各种装逼解释，有的让你根本无法理解，其实就是一个很简单的玩意儿，且听我一一道来。"></a>集群模式在程序猿界有各种装逼解释，有的让你根本无法理解，其实就是一个很简单的玩意儿，且听我一一道来。</h4><h4 id="单机处理到达瓶颈的时候，你就把单机复制几份，这样就构成了一个“集群”。集群中每台服务器就叫做这个集群的一个“节点”，所有节点构成了一个集群。每个节点都提供相同的服务，那么这样系统的处理能力就相当于提升了好几倍（有几个节点就相当于提升了这么多倍）。"><a href="#单机处理到达瓶颈的时候，你就把单机复制几份，这样就构成了一个“集群”。集群中每台服务器就叫做这个集群的一个“节点”，所有节点构成了一个集群。每个节点都提供相同的服务，那么这样系统的处理能力就相当于提升了好几倍（有几个节点就相当于提升了这么多倍）。" class="headerlink" title="单机处理到达瓶颈的时候，你就把单机复制几份，这样就构成了一个“集群”。集群中每台服务器就叫做这个集群的一个“节点”，所有节点构成了一个集群。每个节点都提供相同的服务，那么这样系统的处理能力就相当于提升了好几倍（有几个节点就相当于提升了这么多倍）。"></a>单机处理到达瓶颈的时候，你就把单机复制几份，这样就构成了一个“集群”。集群中每台服务器就叫做这个集群的一个“节点”，所有节点构成了一个集群。每个节点都提供相同的服务，那么这样系统的处理能力就相当于提升了好几倍（有几个节点就相当于提升了这么多倍）。</h4><h4 id="但问题是用户的请求究竟由哪个节点来处理呢？最好能够让此时此刻负载较小的节点来处理，这样使得每个节点的压力都比较平均。要实现这个功能，就需要在所有节点之前增加一个“调度者”的角色，用户的所有请求都先交给它，然后它根据当前所有节点的负载情况，决定将这个请求交给哪个节点处理。这个“调度者”有个牛逼了名字——负载均衡服务器。"><a href="#但问题是用户的请求究竟由哪个节点来处理呢？最好能够让此时此刻负载较小的节点来处理，这样使得每个节点的压力都比较平均。要实现这个功能，就需要在所有节点之前增加一个“调度者”的角色，用户的所有请求都先交给它，然后它根据当前所有节点的负载情况，决定将这个请求交给哪个节点处理。这个“调度者”有个牛逼了名字——负载均衡服务器。" class="headerlink" title="但问题是用户的请求究竟由哪个节点来处理呢？最好能够让此时此刻负载较小的节点来处理，这样使得每个节点的压力都比较平均。要实现这个功能，就需要在所有节点之前增加一个“调度者”的角色，用户的所有请求都先交给它，然后它根据当前所有节点的负载情况，决定将这个请求交给哪个节点处理。这个“调度者”有个牛逼了名字——负载均衡服务器。"></a>但问题是用户的请求究竟由哪个节点来处理呢？最好能够让此时此刻负载较小的节点来处理，这样使得每个节点的压力都比较平均。要实现这个功能，就需要在所有节点之前增加一个“调度者”的角色，用户的所有请求都先交给它，然后它根据当前所有节点的负载情况，决定将这个请求交给哪个节点处理。这个“调度者”有个牛逼了名字——负载均衡服务器。</h4><h4 id="集群结构的好处就是系统扩展非常容易。如果随着你们系统业务的发展，当前的系统又支撑不住了，那么给这个集群再增加节点就行了。但是，当你的业务发展到一定程度的时候，你会发现一个问题——无论怎么增加节点，貌似整个集群性能的提升效果并不明显了。这时候，你就需要使用微服务结构了。"><a href="#集群结构的好处就是系统扩展非常容易。如果随着你们系统业务的发展，当前的系统又支撑不住了，那么给这个集群再增加节点就行了。但是，当你的业务发展到一定程度的时候，你会发现一个问题——无论怎么增加节点，貌似整个集群性能的提升效果并不明显了。这时候，你就需要使用微服务结构了。" class="headerlink" title="集群结构的好处就是系统扩展非常容易。如果随着你们系统业务的发展，当前的系统又支撑不住了，那么给这个集群再增加节点就行了。但是，当你的业务发展到一定程度的时候，你会发现一个问题——无论怎么增加节点，貌似整个集群性能的提升效果并不明显了。这时候，你就需要使用微服务结构了。"></a>集群结构的好处就是系统扩展非常容易。如果随着你们系统业务的发展，当前的系统又支撑不住了，那么给这个集群再增加节点就行了。但是，当你的业务发展到一定程度的时候，你会发现一个问题——无论怎么增加节点，貌似整个集群性能的提升效果并不明显了。这时候，你就需要使用微服务结构了。</h4><h3 id="分布式结构"><a href="#分布式结构" class="headerlink" title="分布式结构"></a>分布式结构</h3><h4 id="先来对前面的知识点做个总结。"><a href="#先来对前面的知识点做个总结。" class="headerlink" title="先来对前面的知识点做个总结。"></a>先来对前面的知识点做个总结。</h4><h4 id="从单机结构到集群结构，你的代码基本无需要作任何修改，你要做的仅仅是多部署几台服务器，每台服务器上运行相同的代码就行了。但是，当你要从集群结构演进到微服务结构的时候，之前的那套代码就需要发生较大的改动了。所以对于新系统我们建议，系统设计之初就采用微服务架构，这样后期运维的成本更低。但如果一套老系统需要升级成微服务结构的话，那就得对代码大动干戈了。所以，对于老系统而言，究竟是继续保持集群模式，还是升级成微服务架构，这需要你们的架构师深思熟虑、权衡投入产出比。"><a href="#从单机结构到集群结构，你的代码基本无需要作任何修改，你要做的仅仅是多部署几台服务器，每台服务器上运行相同的代码就行了。但是，当你要从集群结构演进到微服务结构的时候，之前的那套代码就需要发生较大的改动了。所以对于新系统我们建议，系统设计之初就采用微服务架构，这样后期运维的成本更低。但如果一套老系统需要升级成微服务结构的话，那就得对代码大动干戈了。所以，对于老系统而言，究竟是继续保持集群模式，还是升级成微服务架构，这需要你们的架构师深思熟虑、权衡投入产出比。" class="headerlink" title="从单机结构到集群结构，你的代码基本无需要作任何修改，你要做的仅仅是多部署几台服务器，每台服务器上运行相同的代码就行了。但是，当你要从集群结构演进到微服务结构的时候，之前的那套代码就需要发生较大的改动了。所以对于新系统我们建议，系统设计之初就采用微服务架构，这样后期运维的成本更低。但如果一套老系统需要升级成微服务结构的话，那就得对代码大动干戈了。所以，对于老系统而言，究竟是继续保持集群模式，还是升级成微服务架构，这需要你们的架构师深思熟虑、权衡投入产出比。"></a>从单机结构到集群结构，你的代码基本无需要作任何修改，你要做的仅仅是多部署几台服务器，每台服务器上运行相同的代码就行了。但是，当你要从集群结构演进到微服务结构的时候，之前的那套代码就需要发生较大的改动了。所以对于新系统我们建议，系统设计之初就采用微服务架构，这样后期运维的成本更低。但如果一套老系统需要升级成微服务结构的话，那就得对代码大动干戈了。所以，对于老系统而言，究竟是继续保持集群模式，还是升级成微服务架构，这需要你们的架构师深思熟虑、权衡投入产出比。</h4><h4 id="OK，下面开始介绍所谓的分布式结构。"><a href="#OK，下面开始介绍所谓的分布式结构。" class="headerlink" title="OK，下面开始介绍所谓的分布式结构。"></a>OK，下面开始介绍所谓的分布式结构。</h4><h4 id="分布式结构就是将一个完整的系统，按照业务功能，拆分成一个个独立的子系统，在分布式结构中，每个子系统就被称为“服务”。这些子系统能够独立运行在web容器中，它们之间通过RPC方式通信。"><a href="#分布式结构就是将一个完整的系统，按照业务功能，拆分成一个个独立的子系统，在分布式结构中，每个子系统就被称为“服务”。这些子系统能够独立运行在web容器中，它们之间通过RPC方式通信。" class="headerlink" title="分布式结构就是将一个完整的系统，按照业务功能，拆分成一个个独立的子系统，在分布式结构中，每个子系统就被称为“服务”。这些子系统能够独立运行在web容器中，它们之间通过RPC方式通信。"></a>分布式结构就是将一个完整的系统，按照业务功能，拆分成一个个独立的子系统，在分布式结构中，每个子系统就被称为“服务”。这些子系统能够独立运行在web容器中，它们之间通过RPC方式通信。</h4><h4 id="举个例子，假设需要开发一个在线商城。按照微服务的思想，我们需要按照功能模块拆分成多个独立的服务，如：用户服务、产品服务、订单服务、后台管理服务、数据分析服务等等。这一个个服务都是一个个独立的项目，可以独立运行。如果服务之间有依赖关系，那么通过RPC方式调用。"><a href="#举个例子，假设需要开发一个在线商城。按照微服务的思想，我们需要按照功能模块拆分成多个独立的服务，如：用户服务、产品服务、订单服务、后台管理服务、数据分析服务等等。这一个个服务都是一个个独立的项目，可以独立运行。如果服务之间有依赖关系，那么通过RPC方式调用。" class="headerlink" title="举个例子，假设需要开发一个在线商城。按照微服务的思想，我们需要按照功能模块拆分成多个独立的服务，如：用户服务、产品服务、订单服务、后台管理服务、数据分析服务等等。这一个个服务都是一个个独立的项目，可以独立运行。如果服务之间有依赖关系，那么通过RPC方式调用。"></a>举个例子，假设需要开发一个在线商城。按照微服务的思想，我们需要按照功能模块拆分成多个独立的服务，如：用户服务、产品服务、订单服务、后台管理服务、数据分析服务等等。这一个个服务都是一个个独立的项目，可以独立运行。如果服务之间有依赖关系，那么通过RPC方式调用。</h4><h4 id="这样的好处有很多："><a href="#这样的好处有很多：" class="headerlink" title="这样的好处有很多："></a>这样的好处有很多：</h4><ol><li>系统之间的耦合度大大降低，可以独立开发、独立部署、独立测试，系统与系统之间的边界非常明确，排错也变得相当容易，开发效率大大提升。</li><li>系统之间的耦合度降低，从而系统更易于扩展。我们可以针对性地扩展某些服务。假设这个商城要搞一次大促，下单量可能会大大提升，因此我们可以针对性地提升订单系统、产品系统的节点数量，而对于后台管理系统、数据分析系统而言，节点数量维持原有水平即可。</li><li>服务的复用性更高。比如，当我们将用户系统作为单独的服务后，该公司所有的产品都可以使用该系统作为用户系统，无需重复开发。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：大闲人柴毛毛&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://www.zhihu.com/question/20004877/answer/282033178&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:
      
    
    </summary>
    
    
      <category term="工作" scheme="https://gitee.com/lliugh/blog/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>一文了解 OutOfMemory 及解决方案</title>
    <link href="https://gitee.com/lliugh/blog/2019/02/13/%E4%B8%80%E6%96%87%E4%BA%86%E8%A7%A3%20OutOfMemory%20%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://gitee.com/lliugh/blog/2019/02/13/一文了解 OutOfMemory 及解决方案/</id>
    <published>2019-02-13T03:09:08.000Z</published>
    <updated>2019-02-13T03:33:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>来自：唐尤华</p><p>译自：<a href="https://bloggceasy.files.wordpress.com/2015/05/outofmemoryerror2.pdf" target="_blank" rel="noopener">https://bloggceasy.files.wordpress.com/2015/05/outofmemoryerror2.pdf</a></p></blockquote><h3 id="1-Java-堆空间"><a href="#1-Java-堆空间" class="headerlink" title="1. Java 堆空间"></a>1. Java 堆空间</h3><h4 id="发生频率"><a href="#发生频率" class="headerlink" title="发生频率"></a>发生频率</h4><p>5颗星</p><h4 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>无法在 Java 堆中分配对象</li><li>吞吐量增加</li><li>应用程序无意中保存了对象引用，对象无法被 GC 回收</li><li>应用程序过度使用 finalizer。finalizer 对象不能被 GC 立刻回收。finalizer 由结束队列服务的守护线程调用，有时 finalizer 线程的处理能力无法跟上结束队列的增长</li></ol><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>单位对应：GB -&gt; G, g；MB -&gt; M, m；KB -&gt; K, k</p><ol><li>使用 -Xmx 增加堆大小</li><li>修复应用程序中的内存泄漏</li></ol></blockquote><h3 id="2-GC-开销超过限制"><a href="#2-GC-开销超过限制" class="headerlink" title="2. GC 开销超过限制"></a>2. GC 开销超过限制</h3><h4 id="发生频率-1"><a href="#发生频率-1" class="headerlink" title="发生频率"></a>发生频率</h4><p>5颗星</p><h4 id="造成原因-1"><a href="#造成原因-1" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>Java 进程98%的时间在进行垃圾回收，恢复了不到2%的堆空间，最后连续5个（编译时常量）垃圾回收一直如此。</li></ol><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>使用 -Xmx 增加堆大小</li><li>使用 -XX:-UseGCOverheadLimit 取消 GC 开销限制</li><li>修复应用程序中的内存泄漏</li></ol><h3 id="3-请求的数组大小超过虚拟机限制"><a href="#3-请求的数组大小超过虚拟机限制" class="headerlink" title="3. 请求的数组大小超过虚拟机限制"></a>3. 请求的数组大小超过虚拟机限制</h3><h4 id="发生频率-2"><a href="#发生频率-2" class="headerlink" title="发生频率"></a>发生频率</h4><p>2颗星</p><h4 id="造成原因-2"><a href="#造成原因-2" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>应用程序试图分配一个超过堆大小的数组</li></ol><h4 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>使用 -Xmx 增加堆大小</li><li>修复应用程序中分配巨大数组的 bug</li></ol><h3 id="4-Permgen-空间"><a href="#4-Permgen-空间" class="headerlink" title="4. Permgen 空间"></a>4. Permgen 空间</h3><h4 id="发生频率-3"><a href="#发生频率-3" class="headerlink" title="发生频率"></a>发生频率</h4><p>3颗星</p><h4 id="造成原因-3"><a href="#造成原因-3" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>Permgen 空间包含：<ul><li>类的名字、字段、方法</li><li>与类相关的对象数组和类型数组</li><li>JIT 编译器优化</li></ul></li><li>当 Permgen 空间用尽时，将抛出异常。</li></ol><h4 id="解决方案-3"><a href="#解决方案-3" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>使用 -XX: MaxPermSize 增加 Permgen 大小</li><li>不重启应用部署应用程序可能会导致此问题。重启 JVM 解决</li></ol><h3 id="5-Metaspace"><a href="#5-Metaspace" class="headerlink" title="5. Metaspace"></a>5. Metaspace</h3><h4 id="发生频率-4"><a href="#发生频率-4" class="headerlink" title="发生频率"></a>发生频率</h4><p>3颗星</p><h4 id="造成原因-4"><a href="#造成原因-4" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>从 Java 8 开始 Permgen 改成了 Metaspace，在本机内存中分配 class 元数据（称为 metaspace）。如果 metaspace 耗尽，则抛出异常</li></ol><h4 id="解决方案-4"><a href="#解决方案-4" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>通过命令行设置 -XX: MaxMetaSpaceSize 增加 metaspace 大小</li><li>取消 -XX: maxmetsspacedize</li><li>减小 Java 堆大小,为 MetaSpace 提供更多的可用空间</li><li>为服务器分配更多的内存</li><li>可能是应用程序 bug，修复 bug</li></ol><h3 id="6-无法新建本机线程"><a href="#6-无法新建本机线程" class="headerlink" title="6. 无法新建本机线程"></a>6. 无法新建本机线程</h3><h4 id="发生频率-5"><a href="#发生频率-5" class="headerlink" title="发生频率"></a>发生频率</h4><p>5颗星</p><h4 id="造成原因-5"><a href="#造成原因-5" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>内存不足，无法创建新线程。由于线程在本机内存中创建，报告这个错误表明本机内存空间不足</li></ol><h4 id="解决方案-5"><a href="#解决方案-5" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>为机器分配更多的内存</li><li>减少 Java 堆空间</li><li>修复应用程序中的线程泄漏。</li><li>增加操作系统级别的限制<ul><li>ulimit -a</li><li>用户进程数增大 (-u) 1800</li></ul></li><li>使用 -Xss 减小线程堆栈大小</li></ol><h3 id="7-杀死进程或子进程"><a href="#7-杀死进程或子进程" class="headerlink" title="7. 杀死进程或子进程"></a>7. 杀死进程或子进程</h3><h4 id="发生频率-6"><a href="#发生频率-6" class="headerlink" title="发生频率"></a>发生频率</h4><p>1颗星</p><h4 id="造成原因-6"><a href="#造成原因-6" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>内核任务：内存不足结束器，在可用内存极低的情况下会杀死进程</li></ol><h4 id="解决方案-6"><a href="#解决方案-6" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>将进程迁移到不同的机器上</li><li>给机器增加更多内存</li></ol><p>与其他 OOM 错误不同，这是由操作系统而非 JVM 触发的。</p><h3 id="8-发生-stack-trace-with-native-method"><a href="#8-发生-stack-trace-with-native-method" class="headerlink" title="8. 发生 stack_trace_with_native_method"></a>8. 发生 stack_trace_with_native_method</h3><h4 id="发生频率-7"><a href="#发生频率-7" class="headerlink" title="发生频率"></a>发生频率</h4><p>1颗星</p><h4 id="造成原因-7"><a href="#造成原因-7" class="headerlink" title="造成原因"></a>造成原因</h4><ol><li>本机方法（native method）分配失败</li><li>打印的堆栈跟踪信息，最顶层的帧是本机方法</li></ol><h4 id="解决方案-7"><a href="#解决方案-7" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li>使用操作系统本地工具进行诊断</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;来自：唐尤华&lt;/p&gt;
&lt;p&gt;译自：&lt;a href=&quot;https://bloggceasy.files.wordpress.com/2015/05/outofmemoryerror2.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopene
      
    
    </summary>
    
    
      <category term="工作" scheme="https://gitee.com/lliugh/blog/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Nginx处理图片注意事项</title>
    <link href="https://gitee.com/lliugh/blog/2019/02/13/Nginx%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://gitee.com/lliugh/blog/2019/02/13/Nginx处理图片注意事项/</id>
    <published>2019-02-13T03:04:29.000Z</published>
    <updated>2019-02-13T03:04:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IO流量问题"><a href="#IO流量问题" class="headerlink" title="IO流量问题"></a>IO流量问题</h3><p>当所有图片改为动态裁剪时，源位置只保留一张大尺寸图片，每次裁切时对存储图片的机器网卡IO要求较高。即使只使用一张小图，对后台来说，也是读取了一次全尺寸大图</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>如图片量很大，加入CDN做第一道缓存<br>Nginx加入图片缓存 ，做第二道缓存</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;IO流量问题&quot;&gt;&lt;a href=&quot;#IO流量问题&quot; class=&quot;headerlink&quot; title=&quot;IO流量问题&quot;&gt;&lt;/a&gt;IO流量问题&lt;/h3&gt;&lt;p&gt;当所有图片改为动态裁剪时，源位置只保留一张大尺寸图片，每次裁切时对存储图片的机器网卡IO要求较高。即使只使用
      
    
    </summary>
    
    
      <category term="工作" scheme="https://gitee.com/lliugh/blog/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>SLF4J报错的解决</title>
    <link href="https://gitee.com/lliugh/blog/2018/03/07/SLF4J%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://gitee.com/lliugh/blog/2018/03/07/SLF4J报错的解决/</id>
    <published>2018-03-07T02:38:23.000Z</published>
    <updated>2018-03-07T02:41:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目未能启动，查看日志，报错为<br>java.lang.NoClassDefFoundError: org/slf4j/event/LoggingEvent</p><p>实际问题<br>Logback-classic version 1.1.4及其以后的版本需要1.7.15及其以上版本的slf4j-api。</p><p>记住这个问题只会出现在1.1.4及其以后的logback版本，其他的绑定，例如slf4j-log4j, slf4j-jdk14 and slf4j-simple是不受影响的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目未能启动，查看日志，报错为&lt;br&gt;java.lang.NoClassDefFoundError: org/slf4j/event/LoggingEvent&lt;/p&gt;
&lt;p&gt;实际问题&lt;br&gt;Logback-classic version 1.1.4及其以后的版本需要1.7.
      
    
    </summary>
    
    
      <category term="Java" scheme="https://gitee.com/lliugh/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx操作图片</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/15/Nginx%E6%93%8D%E4%BD%9C%E5%9B%BE%E7%89%87/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/15/Nginx操作图片/</id>
    <published>2018-02-15T04:02:31.000Z</published>
    <updated>2018-02-26T08:44:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>打水印版nginx安装过程(centos) </p><h3 id="安装依赖组件"><a href="#安装依赖组件" class="headerlink" title="安装依赖组件"></a>安装依赖组件</h3><blockquote><p>sudo yum install gd-devel pcre-devel libcurl-devel</p></blockquote><h3 id="下载Nginx"><a href="#下载Nginx" class="headerlink" title="下载Nginx"></a>下载Nginx</h3><blockquote><p>(1) 下载 wget <a href="http://nginx.org/download/nginx-1.9.6.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.9.6.tar.gz</a><br>(2) 解压 tar -zxvf nginx-1.9.6.tar.gz<br>(3) 进入目录 cd nginx-1.9.6 </p></blockquote><h3 id="下载水印功能源代码"><a href="#下载水印功能源代码" class="headerlink" title="下载水印功能源代码"></a>下载水印功能源代码</h3><blockquote><p><a href="https://github.com/intaro/nginx-image-filter-watermark" target="_blank" rel="noopener">https://github.com/intaro/nginx-image-filter-watermark</a><br>点击download zip下载 </p></blockquote><h3 id="覆盖Nginx中的代码"><a href="#覆盖Nginx中的代码" class="headerlink" title="覆盖Nginx中的代码"></a>覆盖Nginx中的代码</h3><blockquote><p>将下载的zip解压，将其中的ngx_http_image_filter_module.c文件覆盖到nginx源码中<br>（/src/http/modules/http_image_filter_module.c） </p></blockquote><h3 id="编译安装Nginx（假设Nginx源码在usr-local-nginx-nginx-1-9-6中）"><a href="#编译安装Nginx（假设Nginx源码在usr-local-nginx-nginx-1-9-6中）" class="headerlink" title="编译安装Nginx（假设Nginx源码在usr/local/nginx/nginx-1.9.6中）"></a>编译安装Nginx（假设Nginx源码在usr/local/nginx/nginx-1.9.6中）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-http_image_filter_module </span><br><span class="line">--with-http_stub_status_module --with-http_ssl_module --with-http_sub_module  --prefix=/usr/<span class="built_in">local</span>/nginx/nginx-1.9.6 </span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Example Usage </span><br><span class="line">Base Usage: </span><br><span class="line">    location /img/ &#123; </span><br><span class="line">        image_filter watermark;#开启水印 </span><br><span class="line">        image_filter_watermark "PATH_TO_FILE";#水印文件位置 </span><br><span class="line">        image_filter_watermark_position center-center;#水印位置 </span><br><span class="line">image_filter_jpeg_quality   95;#图片质量 </span><br><span class="line">        image_filter_buffer         20M;#缓存 </span><br><span class="line">image_filter_watermark_width_from 400;   # 打水印的图片最小宽带，只有大于这个宽带的才会打水印 </span><br><span class="line">       image_filter_watermark_height_from 400;  #打水印的图片最小高度，只有大于这个高度的才会打水印 </span><br><span class="line">    &#125; </span><br><span class="line">Usage with resize and crop: </span><br><span class="line">   location ~ ^/r/(\d+|-)x(\d+|-)/c/(\d+|-)x(\d+|-)/(.+) &#123; </span><br><span class="line">       set                         $resize_width  $1; </span><br><span class="line">       set                         $resize_height $2; </span><br><span class="line">       set                         $crop_width  $3; </span><br><span class="line">       set                         $crop_height $4; </span><br><span class="line"></span><br><span class="line">       alias                       /Users/goshan/Sites/Zot/Zot/web/$5; </span><br><span class="line">       try_files                   "" @404; </span><br><span class="line"></span><br><span class="line">       image_filter                resize $resize_width $resize_height; </span><br><span class="line">       image_filter                crop   $crop_width $crop_height; </span><br><span class="line"></span><br><span class="line">       image_filter_jpeg_quality   95; </span><br><span class="line">       image_filter_buffer         2M; </span><br><span class="line"></span><br><span class="line">       image_filter_watermark_width_from 400;   # Minimal width (after resize) of when to use watermark </span><br><span class="line">       image_filter_watermark_height_from 400;  # Minimal height (after resize) of when to use watermark </span><br><span class="line"></span><br><span class="line">       image_filter_watermark "PATH_TO_FILE"; </span><br><span class="line">       image_filter_watermark_position center-center; </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><p>(1)    水印文件必须是背景透明的文件<br>(2)    如果要打水印的图片文件会很大，需将image_filter_buffer设置大一些，比如20M </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打水印版nginx安装过程(centos) &lt;/p&gt;
&lt;h3 id=&quot;安装依赖组件&quot;&gt;&lt;a href=&quot;#安装依赖组件&quot; class=&quot;headerlink&quot; title=&quot;安装依赖组件&quot;&gt;&lt;/a&gt;安装依赖组件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;sudo yum in
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://gitee.com/lliugh/blog/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>2018年春节</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/15/2018%E5%B9%B4%E6%98%A5%E8%8A%82/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/15/2018年春节/</id>
    <published>2018-02-15T03:04:36.000Z</published>
    <updated>2018-03-07T02:47:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2017总结"><a href="#2017总结" class="headerlink" title="2017总结"></a>2017总结</h3><p>17年经历了比较多的东西，技术学习也荒废了，编码能力严重退化。</p><h3 id="2018展望"><a href="#2018展望" class="headerlink" title="2018展望"></a>2018展望</h3><p>18、18、18、18、18、18、18、18、18</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;2017总结&quot;&gt;&lt;a href=&quot;#2017总结&quot; class=&quot;headerlink&quot; title=&quot;2017总结&quot;&gt;&lt;/a&gt;2017总结&lt;/h3&gt;&lt;p&gt;17年经历了比较多的东西，技术学习也荒废了，编码能力严重退化。&lt;/p&gt;
&lt;h3 id=&quot;2018展望&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://gitee.com/lliugh/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>elastic-job定时任务使用</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/13/elastic-job%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/13/elastic-job定时任务使用/</id>
    <published>2018-02-13T06:57:22.000Z</published>
    <updated>2018-02-13T07:31:35.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-首先引入maven仓库"><a href="#1-首先引入maven仓库" class="headerlink" title="1.首先引入maven仓库"></a>1.首先引入maven仓库</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入elastic-job核心模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.dangdang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elastic-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用springframework自定义命名空间时引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.dangdang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elastic-job-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-首先引入maven仓库&quot;&gt;&lt;a href=&quot;#1-首先引入maven仓库&quot; class=&quot;headerlink&quot; title=&quot;1.首先引入maven仓库&quot;&gt;&lt;/a&gt;1.首先引入maven仓库&lt;/h3&gt;&lt;figure class=&quot;highlight html
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装Tomcat日志拆分</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/12/%E5%AE%89%E8%A3%85Tomcat%E6%97%A5%E5%BF%97%E6%8B%86%E5%88%86/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/12/安装Tomcat日志拆分/</id>
    <published>2018-02-12T03:59:13.000Z</published>
    <updated>2018-02-24T02:26:04.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用root用户安装"><a href="#使用root用户安装" class="headerlink" title="使用root用户安装"></a>使用root用户安装</h3><h3 id="下载cronolog"><a href="#下载cronolog" class="headerlink" title="下载cronolog"></a>下载cronolog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://files.cnblogs.com/files/crazyzero/cronolog-1.6.2.tar.gz</span><br></pre></td></tr></table></figure><h3 id="安装cronolog"><a href="#安装cronolog" class="headerlink" title="安装cronolog"></a>安装cronolog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf cronolog-1.6.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cronolog-1.6.2/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="确认是否安装"><a href="#确认是否安装" class="headerlink" title="确认是否安装"></a>确认是否安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/sbin/cronolog</span><br></pre></td></tr></table></figure><h3 id="修改Tomcat运行文件catalina-sh"><a href="#修改Tomcat运行文件catalina-sh" class="headerlink" title="修改Tomcat运行文件catalina.sh"></a>修改Tomcat运行文件catalina.sh</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改</span><br><span class="line"></span><br><span class="line">    org.apache.catalina.startup.Bootstrap "$@" start &gt;&gt; "$CATALINA_OUT" 2&gt;&amp;1 "&amp;"</span><br><span class="line"></span><br><span class="line">为</span><br><span class="line"></span><br><span class="line">    org.apache.catalina.startup.Bootstrap "$@" start 2&gt;&amp;1 | /usr/local/sbin/cronolog "$CATALINA_BASE"/logs/catalina.%Y-%m-%d.out &gt;&gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用root用户安装&quot;&gt;&lt;a href=&quot;#使用root用户安装&quot; class=&quot;headerlink&quot; title=&quot;使用root用户安装&quot;&gt;&lt;/a&gt;使用root用户安装&lt;/h3&gt;&lt;h3 id=&quot;下载cronolog&quot;&gt;&lt;a href=&quot;#下载cronolog&quot;
      
    
    </summary>
    
    
      <category term="Tomcat" scheme="https://gitee.com/lliugh/blog/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装Redis</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/12/CentOS%E5%AE%89%E8%A3%85Redis/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/12/CentOS安装Redis/</id>
    <published>2018-02-12T01:22:40.000Z</published>
    <updated>2018-02-12T04:29:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装系统依赖"><a href="#安装系统依赖" class="headerlink" title="安装系统依赖"></a>安装系统依赖</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> gcc-c++</span><br><span class="line">yum <span class="keyword">install</span> -y tcl</span><br><span class="line">yum <span class="keyword">install</span> wget</span><br></pre></td></tr></table></figure><h3 id="下载redis包"><a href="#下载redis包" class="headerlink" title="下载redis包"></a>下载redis包</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="regexp">//</span>download.redis.io<span class="regexp">/releases/</span>redis-<span class="number">4.0</span>.<span class="number">8</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="新建程序目录，并将tar包拷贝到目录中，解压"><a href="#新建程序目录，并将tar包拷贝到目录中，解压" class="headerlink" title="新建程序目录，并将tar包拷贝到目录中，解压"></a>新建程序目录，并将tar包拷贝到目录中，解压</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">tar -zxvf redis-<span class="number">4.0</span>.<span class="number">8</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><h3 id="进入目录并安装"><a href="#进入目录并安装" class="headerlink" title="进入目录并安装"></a>进入目录并安装</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /data/redis-4.0.8/</span><br><span class="line">make</span><br><span class="line">make <span class="keyword">install</span> (此命令需要Root权限，程序会自动将redis-<span class="keyword">server</span>拷贝到/usr/<span class="keyword">local</span>/<span class="keyword">bin</span>下)</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/redis </span><br><span class="line">cp /data/redis<span class="number">-4.0</span><span class="number">.8</span>/redis.conf /etc/redis/ (将配置文件拷贝到etc目录下)</span><br><span class="line">修改bind</span><br><span class="line">bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> (任何IP都可访问些Redis)</span><br><span class="line">daemonize no --&gt; yes (Redis以后台方式运行)</span><br></pre></td></tr></table></figure><h3 id="启动redis-不需要root用户"><a href="#启动redis-不需要root用户" class="headerlink" title="启动redis (不需要root用户)"></a>启动redis (不需要root用户)</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>redis-server <span class="regexp">/etc/</span>redis<span class="regexp">/redis.conf</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装系统依赖&quot;&gt;&lt;a href=&quot;#安装系统依赖&quot; class=&quot;headerlink&quot; title=&quot;安装系统依赖&quot;&gt;&lt;/a&gt;安装系统依赖&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将hexo博客同时托管到github和码云</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/11/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E6%89%98%E7%AE%A1%E5%88%B0github%E5%92%8Ccoding/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/11/将hexo博客同时托管到github和coding/</id>
    <published>2018-02-11T14:28:25.000Z</published>
    <updated>2018-02-12T04:29:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置文件写成如下形式-config-yml"><a href="#配置文件写成如下形式-config-yml" class="headerlink" title="配置文件写成如下形式(_config.yml)"></a>配置文件写成如下形式(_config.yml)</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">- <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: &#123;giturl&#125;</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br><span class="line">- <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: &#123;giturl&#125;</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;配置文件写成如下形式-config-yml&quot;&gt;&lt;a href=&quot;#配置文件写成如下形式-config-yml&quot; class=&quot;headerlink&quot; title=&quot;配置文件写成如下形式(_config.yml)&quot;&gt;&lt;/a&gt;配置文件写成如下形式(_config.ym
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>增加mybatis日志</title>
    <link href="https://gitee.com/lliugh/blog/2018/02/11/%E5%A2%9E%E5%8A%A0mybatis%E6%97%A5%E5%BF%97/"/>
    <id>https://gitee.com/lliugh/blog/2018/02/11/增加mybatis日志/</id>
    <published>2018-02-11T10:25:34.000Z</published>
    <updated>2018-02-13T08:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改工程web-xml，加入"><a href="#修改工程web-xml，加入" class="headerlink" title="修改工程web.xml，加入"></a>修改工程web.xml，加入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jRefreshInterval<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>6000<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="增加log4j-properties"><a href="#增加log4j-properties" class="headerlink" title="增加log4j.properties"></a>增加log4j.properties</h3><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###设置Logger输出级别和输出目的地###debug更详细,如果设为info那么打印出的表数据遇到字符串就不显示，此外还有logfile</span></span><br><span class="line">log4j.rootLogger=info,stdout,D,E</span><br><span class="line"></span><br><span class="line"><span class="comment">###把日志信息输出到控制台###</span></span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line"><span class="comment">#log4j.appender.stdout.Target=System.err</span></span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout</span><br><span class="line"></span><br><span class="line"><span class="comment">###把日志信息输出到文件：jbit.log###</span></span><br><span class="line">log4j.appender.logfile=org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logfile.File=logs/Yimi/YimiInfo.log</span><br><span class="line">log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logfile.layout.ConversionPattern=%d&#123;<span class="attribute">yyyy-MM-ddHH</span>:mm:ss&#125;%F%p%m%n</span><br><span class="line"></span><br><span class="line">###输出DEBUG级别以上的日志到###</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span>=org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.DailyRollingFileAppender</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span><span class="variable">.File</span>=logs/Yimi/YimiDebug<span class="variable">.log</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span><span class="variable">.Append</span>=true</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span><span class="variable">.Threshold</span>=DEBUG</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span><span class="variable">.layout</span>=org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.PatternLayout</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.D</span><span class="variable">.layout</span><span class="variable">.ConversionPattern</span>=%-d&#123;yyyy-MM-ddHH:mm:ss&#125;[%t:%r]-[%p]%m%n</span><br><span class="line"></span><br><span class="line">###输出ERROR级别以上的日志到###</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span>=org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.DailyRollingFileAppender</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.File</span>=Yimi/YimiError<span class="variable">.log</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.Append</span>=true</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.Threshold</span>=ERROR</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.layout</span>=org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.PatternLayout</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.layout</span><span class="variable">.ConversionPattern</span>=%-d&#123;yyyy-MM-ddHH:mm:ss&#125;[%t:%r]-[%p]%m%n</span><br><span class="line"></span><br><span class="line">###显示SQL语句部分</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.com</span><span class="variable">.mybatis</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.com</span><span class="variable">.mybatis</span><span class="variable">.common</span><span class="variable">.jdbc</span><span class="variable">.SimpleDataSource</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.com</span><span class="variable">.mybatis</span><span class="variable">.common</span><span class="variable">.jdbc</span><span class="variable">.ScriptRunner</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.com</span><span class="variable">.mybatis</span><span class="variable">.sqlmap</span><span class="variable">.engine</span><span class="variable">.impl</span><span class="variable">.SqlMapClientDelegate</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.java</span><span class="variable">.sql</span><span class="variable">.Connection</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.java</span><span class="variable">.sql</span><span class="variable">.Statement</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.java</span><span class="variable">.sql</span><span class="variable">.PreparedStatement</span>=INFO</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.java</span><span class="variable">.sql</span><span class="variable">.ResultSet</span>=INFO</span><br></pre></td></tr></table></figure><h3 id="修改工程mybatis-xml，增加以下配置"><a href="#修改工程mybatis-xml，增加以下配置" class="headerlink" title="修改工程mybatis.xml，增加以下配置"></a>修改工程mybatis.xml，增加以下配置</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;setting <span class="attribute">name</span>=<span class="string">"logImpl"</span> <span class="attribute">value</span>=<span class="string">"STDOUT_LOGGING"</span> /&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;修改工程web-xml，加入&quot;&gt;&lt;a href=&quot;#修改工程web-xml，加入&quot; class=&quot;headerlink&quot; title=&quot;修改工程web.xml，加入&quot;&gt;&lt;/a&gt;修改工程web.xml，加入&lt;/h3&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
      <category term="Tomcat" scheme="https://gitee.com/lliugh/blog/tags/Tomcat/"/>
    
      <category term="日志" scheme="https://gitee.com/lliugh/blog/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="Mybatis" scheme="https://gitee.com/lliugh/blog/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>微服务开发的12项要素</title>
    <link href="https://gitee.com/lliugh/blog/2016/07/16/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9A%8412%E9%A1%B9%E8%A6%81%E7%B4%A0/"/>
    <id>https://gitee.com/lliugh/blog/2016/07/16/微服务开发的12项要素/</id>
    <published>2016-07-16T03:27:50.000Z</published>
    <updated>2016-07-16T05:12:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>spring cloud官方文档提到的服务开发的12项要素。</p><p>I. Codebase<br>从一个代码库部署到多个环境。</p><p>II. Dependencies<br>使用显式的声明隔离依赖，即模块单独运行，并可以显式管理依赖。</p><p>III. Config<br>*在系统外部存储配置信息。</p><p>IV. Backing Services<br>把支持性服务看做是资源，支持性服务包括数据库、消息队列、缓冲服务器等。</p><p>V. Build, release, run<br>严格的划分编译、构建、运行阶段，每个阶段由工具进行管理。</p><p>VI. Processes<br>应用作为无状态执行。</p><p>VII. Port binding<br>经由端口绑定导出服务，优先选择 HTTP API 作为通用的集成框架。</p><p>VIII. Concurrency<br>并发性使用水平扩展实现，对于web就是水平扩展web应用实现。</p><p>IX. Disposability<br>服务可处置性，任何服务可以随意终止或启动。</p><p>X. Dev/prod parity<br>开发和生产环境保持高度一致，一键式部署。</p><p>XI. Logs<br>将日志看做是事件流来管理，所有参与的服务均使用该方式处理日志。</p><p>XII. Admin processes<br>管理任务作为一次性的过程运行（使用脚本管理服务启动和停止）。</p><p>转自：<a href="http://www.cnblogs.com/skyblog/p/5099140.html" target="_blank" rel="noopener">http://www.cnblogs.com/skyblog/p/5099140.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;spring cloud官方文档提到的服务开发的12项要素。&lt;/p&gt;
&lt;p&gt;I. Codebase&lt;br&gt;从一个代码库部署到多个环境。&lt;/p&gt;
&lt;p&gt;II. Dependencies&lt;br&gt;使用显式的声明隔离依赖，即模块单独运行，并可以显式管理依赖。&lt;/p&gt;
&lt;p&gt;III.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>URL的ASCII码表</title>
    <link href="https://gitee.com/lliugh/blog/2016/06/27/URL%E7%9A%84ASCII%E7%A0%81%E8%A1%A8/"/>
    <id>https://gitee.com/lliugh/blog/2016/06/27/URL的ASCII码表/</id>
    <published>2016-06-27T02:37:22.000Z</published>
    <updated>2016-06-27T02:45:08.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>ASCII字符</th><th>字符中文名</th><th>编码后的值</th></tr></thead><tbody><tr><td>   ‘ ‘</td><td>空格</td><td>%20</td></tr><tr><td>   ‘!’</td><td>感叹号</td><td>%21</td></tr><tr><td>   ‘&amp;’</td><td>花at</td><td>%26</td></tr><tr><td>   ‘/’</td><td>斜杠</td><td>%2F</td></tr><tr><td>   ‘:’</td><td>冒号)</td><td>%3A</td></tr><tr><td>   ‘=’</td><td>等于号</td><td>%3D</td></tr><tr><td>   ‘?’</td><td>问号</td><td>%3F</td></tr><tr><td>   ‘~’</td><td>波浪号</td><td>%7E</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ASCII字符&lt;/th&gt;
&lt;th&gt;字符中文名&lt;/th&gt;
&lt;th&gt;编码后的值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;   ‘ ‘&lt;/td&gt;
&lt;td&gt;空格&lt;/td&gt;
&lt;td&gt;%20&lt;/td&gt;
&lt;/t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tomcat+Nginx反向代理配置</title>
    <link href="https://gitee.com/lliugh/blog/2016/06/27/Tomcat-Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    <id>https://gitee.com/lliugh/blog/2016/06/27/Tomcat-Nginx反向代理配置/</id>
    <published>2016-06-27T01:28:40.000Z</published>
    <updated>2018-02-13T08:28:24.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *&gt;</span></span><br><span class="line">        <span class="attribute"><span class="nomarkup">ServerName</span></span> www.cahomeca.com</span><br><span class="line">        <span class="attribute">ErrorLog</span> logs/cahomeca-error_log</span><br><span class="line">        <span class="attribute">CustomLog</span> logs/cahomeca-access_log common</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ProxyPreserveHost</span> <span class="literal">On</span></span><br><span class="line">        <span class="attribute">ProxyRequests</span> <span class="literal">Off</span></span><br><span class="line">        <span class="attribute">ProxyPass</span> / http://127.0.0.1:8080/</span><br><span class="line">        <span class="attribute">ProxyPassReverse</span> / http://127.0.0.1:8080/</span><br><span class="line">        <span class="section">&lt;proxy  http://127.0.0.1:8080&gt;</span></span><br><span class="line">                <span class="attribute">AllowOverride</span> None</span><br><span class="line">                <span class="attribute"><span class="nomarkup">Order</span></span> Deny,Allow</span><br><span class="line">                <span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></span><br><span class="line">        <span class="section">&lt;/proxy&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="Tomcat" scheme="https://gitee.com/lliugh/blog/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://gitee.com/lliugh/blog/2016/06/26/hello-world/"/>
    <id>https://gitee.com/lliugh/blog/2016/06/26/hello-world/</id>
    <published>2016-06-26T15:24:02.000Z</published>
    <updated>2016-06-26T15:24:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
